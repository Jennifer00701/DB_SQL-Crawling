Python 에서 SQL(workbench)로 데이터를 전송하는 것 
새로 DB.py 파일을 만든 후 기존에 크롤링 한 내용을 가져와야 함.
py 크롤링 파일에서 py DB보낼 파일 따로 만든 후 그 파일에 크롤링한 내역 복사
num, .text, print, f.{} 모두 삭제하되, DB에 저장되어야 하는 부분만 남기기 

그전에 SQL 가서 테이블 생성 
CREATE TABLE 생성할명
# 되도록 명시적인 것 ! user 등

--------------[기본 세팅]--------------------

import pymysql
import mysql.connector
from bs4 import  BeautifulSoup
from selenium import webdriver
from selenium.webdriver.common.by import By
import time

# (1) mysql 연결 설정
db_connection = mysql.connector.connect(
    host = 'localhost', # 내 컴퓨터
    user = 'root', # 계정 
    password = '485029', # 비밀번호 
    database = 'DB_all' # 연결할 DB명
)

# (2) mysql 연결 
cursor = db_connection.cursor()

--------------[workbench DB table 생성]--------------------

id INT NOT NULL AUTO_INCREMENT
# id 값 = 데이터의 고유한 번호 
# id 는 가장 첫 번째 작성하는게 좋음 
# id 값의 타임은 int고 null값을 허용하지 않으며, 데이터가 
# 자동적으로 증가한다. 뜻 


CREATE TABLE 테이블명 (
    name VARCHAR(255)not null, 
    emil VARCHAR(255)not null,
    money int not null, 
    num int not null
); 

PRIMARY KEY(id)
# 고유 아이디 값을 넣을 때 이 명령어 필수

str은 VARCHAR(255) 로 넣어줌 
= 들어오는 str값에 따라 다름

값이 없는 것들은 NULL값 지정
해당 값이 없을 수도 있다.

    values = (Q1, A1)
            # ->  집어넣을 데이터 변수 명
    cursor.execute(sql,values)
    db_connection.commit()
        # 위에 sql 문 반영 -> db에  보낸 데이터를 반영하겠다. ( 이부분 필수 )

        # 노란 줄 뜰 경우 위에 선언 안 된 것 !! ( import, 선언 둘 다 확인 )

'''
create table ozcodig (
	id INT NOT NULL AUTO_INCREMENT,
	Question varchar(255) not null,
    Answer varchar(255) not null,
    
    primary key(id)
);

# 생성 시 select * from ~ 부분은 주석 후 진행해줘야함
'''

------------------------------------